import tkinter as tk
from tkinter import ttk, filedialog, messagebox
import sqlite3
import pandas as pd

# Fonction pour sélectionner la base de données
def select_database():
    global conn, cursor, db_path
    db_path = filedialog.askopenfilename(title="Sélectionner une base de données SQLite", filetypes=[("SQLite Database", "*.db")])
    if db_path:
        try:
            conn = sqlite3.connect(db_path)
            cursor = conn.cursor()
            messagebox.showinfo("Succès", f"Connexion réussie à {db_path}")
        except Exception as e:
            messagebox.showerror("Erreur de connexion", str(e))

def execute_query():
    """Exécute une requête SQL saisie par l'utilisateur et affiche les résultats."""
    query = query_entry.get("1.0", tk.END).strip()
    if not query:
        messagebox.showwarning("Requête vide", "Veuillez saisir une requête SQL.")
        return
    try:
        cursor.execute(query)
        rows = cursor.fetchall()
        columns = [desc[0] for desc in cursor.description]
        
        # Effacer l'ancien affichage
        for row in tree.get_children():
            tree.delete(row)
        
        # Mettre à jour les colonnes du Treeview
        tree["columns"] = columns
        tree["show"] = "headings"
        for col in columns:
            tree.heading(col, text=col, anchor="center")
            tree.column(col, width=120, anchor="center")
        
        # Insérer les nouvelles données
        for row in rows:
            tree.insert("", "end", values=row)
    except Exception as e:
        messagebox.showerror("Erreur SQL", str(e))

# Interface Tkinter améliorée
root = tk.Tk()
root.title("Interrogation de la Base de Données")
root.geometry("900x600")
root.configure(bg="#f0f0f0")

title_label = tk.Label(root, text="Exécuter des requêtes SQL", font=("Arial", 16, "bold"), bg="#f0f0f0")
title_label.pack(pady=10)

# Bouton de sélection de la base de données
db_button = tk.Button(root, text="Sélectionner une base de données", font=("Arial", 12), command=select_database, bg="#007BFF", fg="white")
db_button.pack(pady=5)

# Zone de saisie de requête
query_frame = tk.Frame(root, bg="#f0f0f0")
query_frame.pack(pady=5, fill="x", padx=10)
query_label = tk.Label(query_frame, text="Saisissez votre requête SQL :", font=("Arial", 12), bg="#f0f0f0")
query_label.pack(anchor="w")
query_entry = tk.Text(query_frame, height=4, font=("Arial", 12))
query_entry.pack(fill="x")

# Bouton d'exécution
execute_button = tk.Button(root, text="Exécuter", font=("Arial", 12), command=execute_query, bg="#4CAF50", fg="white")
execute_button.pack(pady=10)

# Table d'affichage avec scrollbar
frame = tk.Frame(root, bg="#f0f0f0")
frame.pack(fill="both", expand=True, padx=10, pady=5)

tree_frame = tk.Frame(frame)
tree_frame.pack(fill="both", expand=True)

tree_scroll = ttk.Scrollbar(tree_frame, orient="vertical")
tree_scroll.pack(side="right", fill="y")

tree = ttk.Treeview(tree_frame, yscrollcommand=tree_scroll.set)
tree.pack(fill="both", expand=True)
tree_scroll.config(command=tree.yview)

# Lancer l'application
root.mainloop()

# Fermer la connexion à la base de données si elle existe
if 'conn' in globals():
    conn.close()
