import tkinter as tk
from tkinter import ttk, filedialog
import pandas as pd

# Charger les fichiers CSV
csv_files = {
    "caract-2023.csv": "/mnt/data/caract-2023.csv",
    "lieux-2023.csv": "/mnt/data/extracted_files/Projet_SGBD/lieux-2023.csv",
    "vehicules-2023.csv": "/mnt/data/extracted_files/Projet_SGBD/vehicules-2023.csv",
    "usagers-2023.csv": "/mnt/data/extracted_files/Projet_SGBD/usagers-2023.csv"
}

def load_csv(file_path):
    """Charge un fichier CSV dans un DataFrame."""
    try:
        return pd.read_csv(file_path, encoding='utf-8')
    except Exception as e:
        print(f"Erreur lors du chargement du fichier {file_path}: {e}")
        return pd.DataFrame()

def display_csv(selected_file):
    """Affiche le contenu du fichier CSV sélectionné."""
    for row in tree.get_children():
        tree.delete(row)
    
    df = load_csv(csv_files[selected_file])
    if df.empty:
        return
    
    tree["columns"] = list(df.columns)
    tree["show"] = "headings"
    
    for col in df.columns:
        tree.heading(col, text=col)
        tree.column(col, width=100)
    
    for _, row in df.iterrows():
        tree.insert("", "end", values=list(row))

def refresh_display():
    """Recharge le fichier sélectionné."""
    selected_file = file_selector.get()
    if selected_file:
        display_csv(selected_file)


# Interface Tkinter améliorée
root = tk.Tk()
root.title("Visualiseur de fichiers CSV")
root.geometry("900x600")
root.configure(bg="#f0f0f0")

title_label = tk.Label(root, text="Visualisation des fichiers CSV", font=("Arial", 16, "bold"), bg="#f0f0f0")
title_label.pack(pady=10)

control_frame = tk.Frame(root, bg="#f0f0f0")
control_frame.pack(pady=5)

tk.Label(control_frame, text="Sélectionnez un fichier :", font=("Arial", 12), bg="#f0f0f0").pack(side="left", padx=5)
file_selector = ttk.Combobox(control_frame, values=list(csv_files.keys()), font=("Arial", 12))
file_selector.pack(side="left", padx=5)
file_selector.bind("<<ComboboxSelected>>", lambda e: display_csv(file_selector.get()))

refresh_button = tk.Button(control_frame, text="Rafraîchir", font=("Arial", 12), command=refresh_display, bg="#4CAF50", fg="white")
refresh_button.pack(side="left", padx=10)

# Table d'affichage avec scrollbar
frame = tk.Frame(root, bg="#f0f0f0")
frame.pack(fill="both", expand=True, padx=10, pady=5)

tree_frame = tk.Frame(frame)
tree_frame.pack(fill="both", expand=True)

tree_scroll = ttk.Scrollbar(tree_frame, orient="vertical")
tree_scroll.pack(side="right", fill="y")

tree = ttk.Treeview(tree_frame, yscrollcommand=tree_scroll.set)
tree.pack(fill="both", expand=True)
tree_scroll.config(command=tree.yview)

# Lancer l'application
root.mainloop()
